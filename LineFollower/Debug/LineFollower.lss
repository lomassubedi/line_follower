
LineFollower.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000744  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000064  00800060  00000744  000007d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  008000c4  008000c4  0000083c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000083c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000898  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a86  00000000  00000000  0000095c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000785  00000000  00000000  000013e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000443  00000000  00000000  00001b67  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000010c  00000000  00000000  00001fac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b7  00000000  00000000  000020b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000013b  00000000  00000000  0000256f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000026aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e4       	ldi	r30, 0x44	; 68
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 3c       	cpi	r26, 0xC4	; 196
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 ec       	ldi	r26, 0xC4	; 196
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 3c       	cpi	r26, 0xCA	; 202
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 7c 00 	call	0xf8	; 0xf8 <main>
  8a:	0c 94 a0 03 	jmp	0x740	; 0x740 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <uart_putchar>:
	MOTOR_PORT |= (1 << MOTOR_LEFT_IN2);
	MOTOR_PORT &= ~((1 << MOTOR_RIGHT_IN1) | (1 << MOTOR_LEFT_IN1) | (1 << MOTOR_RIGHT_IN2));
}

void robot_stop() {
	MOTOR_PORT = 0x00;	
  92:	cf 93       	push	r28
  94:	c8 2f       	mov	r28, r24
  96:	8a 30       	cpi	r24, 0x0A	; 10
  98:	19 f4       	brne	.+6      	; 0xa0 <uart_putchar+0xe>
  9a:	8d e0       	ldi	r24, 0x0D	; 13
  9c:	0e 94 49 00 	call	0x92	; 0x92 <uart_putchar>
  a0:	5d 9b       	sbis	0x0b, 5	; 11
  a2:	fe cf       	rjmp	.-4      	; 0xa0 <uart_putchar+0xe>
  a4:	cc b9       	out	0x0c, r28	; 12
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	cf 91       	pop	r28
  ac:	08 95       	ret

000000ae <init_UART>:
  ae:	83 e3       	ldi	r24, 0x33	; 51
  b0:	89 b9       	out	0x09, r24	; 9
  b2:	10 bc       	out	0x20, r1	; 32
  b4:	8a b1       	in	r24, 0x0a	; 10
  b6:	88 61       	ori	r24, 0x18	; 24
  b8:	8a b9       	out	0x0a, r24	; 10
  ba:	80 b5       	in	r24, 0x20	; 32
  bc:	86 68       	ori	r24, 0x86	; 134
  be:	80 bd       	out	0x20, r24	; 32
  c0:	08 95       	ret

000000c2 <init_adc>:
  c2:	37 9a       	sbi	0x06, 7	; 6
  c4:	86 b1       	in	r24, 0x06	; 6
  c6:	86 60       	ori	r24, 0x06	; 6
  c8:	86 b9       	out	0x06, r24	; 6
  ca:	3e 9a       	sbi	0x07, 6	; 7
  cc:	3d 98       	cbi	0x07, 5	; 7
  ce:	08 95       	ret

000000d0 <read_adc>:
  d0:	97 b1       	in	r25, 0x07	; 7
  d2:	87 70       	andi	r24, 0x07	; 7
  d4:	98 2b       	or	r25, r24
  d6:	97 b9       	out	0x07, r25	; 7
  d8:	36 9a       	sbi	0x06, 6	; 6
  da:	34 9b       	sbis	0x06, 4	; 6
  dc:	fe cf       	rjmp	.-4      	; 0xda <read_adc+0xa>
  de:	34 9a       	sbi	0x06, 4	; 6
  e0:	87 b1       	in	r24, 0x07	; 7
  e2:	88 7f       	andi	r24, 0xF8	; 248
  e4:	87 b9       	out	0x07, r24	; 7
  e6:	84 b1       	in	r24, 0x04	; 4
  e8:	95 b1       	in	r25, 0x05	; 5
  ea:	08 95       	ret

000000ec <init_pwm>:
  ec:	bb 9a       	sbi	0x17, 3	; 23
  ee:	82 e6       	ldi	r24, 0x62	; 98
  f0:	83 bf       	out	0x33, r24	; 51
  f2:	8f 9a       	sbi	0x11, 7	; 17
  f4:	85 bd       	out	0x25, r24	; 37
  f6:	08 95       	ret

000000f8 <main>:
}

int main(void) {
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	cd b7       	in	r28, 0x3d	; 61
  fe:	de b7       	in	r29, 0x3e	; 62
 100:	2c 97       	sbiw	r28, 0x0c	; 12
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	f8 94       	cli
 106:	de bf       	out	0x3e, r29	; 62
 108:	0f be       	out	0x3f, r0	; 63
 10a:	cd bf       	out	0x3d, r28	; 61

    uint16_t left_sensor = 0, mid_sensor_l = 0, mid_sensor_r = 0, right_sensor = 0;

	init_UART();
 10c:	0e 94 57 00 	call	0xae	; 0xae <init_UART>
	init_adc();
 110:	0e 94 61 00 	call	0xc2	; 0xc2 <init_adc>
	init_pwm();
 114:	0e 94 76 00 	call	0xec	; 0xec <init_pwm>
	ADCSRA|=(1<<ADIF);					// clearing of ADIF, it is done by writing 1 to it
	ADMUX &= 0b11111000;
	return ADC;
}
void pwm_motor_left(uint8_t duty) {
	OCR2 = duty;
 118:	80 e8       	ldi	r24, 0x80	; 128
 11a:	83 bd       	out	0x23, r24	; 35
	return;
}

void pwm_motor_right(uint8_t duty) {
	OCR0 = duty;
 11c:	8c bf       	out	0x3c, r24	; 60
	pwm_motor_right(128);
	/*init_ios();*/
	
	// Setup for pipelining UART data to C standard IO library making printf() work
    static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
    stdout = &mystdout;	
 11e:	80 e6       	ldi	r24, 0x60	; 96
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	90 93 c7 00 	sts	0x00C7, r25	; 0x8000c7 <__data_end+0x3>
 126:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__data_end+0x2>
	float P = 0.0;
	
	
	
    while (1) {
		for(uint8_t i = 0; i < 6; i++) {
 12a:	00 e0       	ldi	r16, 0x00	; 0
			sensor_raw[i] = read_adc(i);
		}
		printf("Sensor 0 : %d\tSensor 1 : %d\tSensor 2 : %d\tSensor 3 : %d\tSensor 4 : %d\tSensor 5 : %d\n", sensor_raw[0], sensor_raw[1], sensor_raw[2], sensor_raw[3], sensor_raw[4], sensor_raw[5]);
 12c:	0f 2e       	mov	r0, r31
 12e:	fe e6       	ldi	r31, 0x6E	; 110
 130:	cf 2e       	mov	r12, r31
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	df 2e       	mov	r13, r31
 136:	f0 2d       	mov	r31, r0
 138:	ce 01       	movw	r24, r28
 13a:	01 96       	adiw	r24, 0x01	; 1
 13c:	7c 01       	movw	r14, r24
	float P = 0.0;
	
	
	
    while (1) {
		for(uint8_t i = 0; i < 6; i++) {
 13e:	10 2f       	mov	r17, r16
			sensor_raw[i] = read_adc(i);
 140:	81 2f       	mov	r24, r17
 142:	0e 94 68 00 	call	0xd0	; 0xd0 <read_adc>
 146:	f7 01       	movw	r30, r14
 148:	81 93       	st	Z+, r24
 14a:	91 93       	st	Z+, r25
 14c:	7f 01       	movw	r14, r30
	float P = 0.0;
	
	
	
    while (1) {
		for(uint8_t i = 0; i < 6; i++) {
 14e:	1f 5f       	subi	r17, 0xFF	; 255
 150:	16 30       	cpi	r17, 0x06	; 6
 152:	b1 f7       	brne	.-20     	; 0x140 <main+0x48>
			sensor_raw[i] = read_adc(i);
		}
		printf("Sensor 0 : %d\tSensor 1 : %d\tSensor 2 : %d\tSensor 3 : %d\tSensor 4 : %d\tSensor 5 : %d\n", sensor_raw[0], sensor_raw[1], sensor_raw[2], sensor_raw[3], sensor_raw[4], sensor_raw[5]);
 154:	8c 85       	ldd	r24, Y+12	; 0x0c
 156:	8f 93       	push	r24
 158:	8b 85       	ldd	r24, Y+11	; 0x0b
 15a:	8f 93       	push	r24
 15c:	8a 85       	ldd	r24, Y+10	; 0x0a
 15e:	8f 93       	push	r24
 160:	89 85       	ldd	r24, Y+9	; 0x09
 162:	8f 93       	push	r24
 164:	88 85       	ldd	r24, Y+8	; 0x08
 166:	8f 93       	push	r24
 168:	8f 81       	ldd	r24, Y+7	; 0x07
 16a:	8f 93       	push	r24
 16c:	8e 81       	ldd	r24, Y+6	; 0x06
 16e:	8f 93       	push	r24
 170:	8d 81       	ldd	r24, Y+5	; 0x05
 172:	8f 93       	push	r24
 174:	8c 81       	ldd	r24, Y+4	; 0x04
 176:	8f 93       	push	r24
 178:	8b 81       	ldd	r24, Y+3	; 0x03
 17a:	8f 93       	push	r24
 17c:	8a 81       	ldd	r24, Y+2	; 0x02
 17e:	8f 93       	push	r24
 180:	89 81       	ldd	r24, Y+1	; 0x01
 182:	8f 93       	push	r24
 184:	df 92       	push	r13
 186:	cf 92       	push	r12
 188:	0e 94 d5 00 	call	0x1aa	; 0x1aa <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18c:	ff ef       	ldi	r31, 0xFF	; 255
 18e:	24 e3       	ldi	r18, 0x34	; 52
 190:	8c e0       	ldi	r24, 0x0C	; 12
 192:	f1 50       	subi	r31, 0x01	; 1
 194:	20 40       	sbci	r18, 0x00	; 0
 196:	80 40       	sbci	r24, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x9a>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0xa4>
 19c:	00 00       	nop
 19e:	0f b6       	in	r0, 0x3f	; 63
 1a0:	f8 94       	cli
 1a2:	de bf       	out	0x3e, r29	; 62
 1a4:	0f be       	out	0x3f, r0	; 63
 1a6:	cd bf       	out	0x3d, r28	; 61
 1a8:	c7 cf       	rjmp	.-114    	; 0x138 <main+0x40>

000001aa <printf>:
 1aa:	a0 e0       	ldi	r26, 0x00	; 0
 1ac:	b0 e0       	ldi	r27, 0x00	; 0
 1ae:	eb ed       	ldi	r30, 0xDB	; 219
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__prologue_saves__+0x20>
 1b6:	ae 01       	movw	r20, r28
 1b8:	4b 5f       	subi	r20, 0xFB	; 251
 1ba:	5f 4f       	sbci	r21, 0xFF	; 255
 1bc:	fa 01       	movw	r30, r20
 1be:	61 91       	ld	r22, Z+
 1c0:	71 91       	ld	r23, Z+
 1c2:	af 01       	movw	r20, r30
 1c4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__data_end+0x2>
 1c8:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <__data_end+0x3>
 1cc:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <vfprintf>
 1d0:	e2 e0       	ldi	r30, 0x02	; 2
 1d2:	0c 94 95 03 	jmp	0x72a	; 0x72a <__epilogue_restores__+0x20>

000001d6 <vfprintf>:
 1d6:	ac e0       	ldi	r26, 0x0C	; 12
 1d8:	b0 e0       	ldi	r27, 0x00	; 0
 1da:	e1 ef       	ldi	r30, 0xF1	; 241
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	0c 94 69 03 	jmp	0x6d2	; 0x6d2 <__prologue_saves__>
 1e2:	7c 01       	movw	r14, r24
 1e4:	6b 01       	movw	r12, r22
 1e6:	8a 01       	movw	r16, r20
 1e8:	fc 01       	movw	r30, r24
 1ea:	17 82       	std	Z+7, r1	; 0x07
 1ec:	16 82       	std	Z+6, r1	; 0x06
 1ee:	83 81       	ldd	r24, Z+3	; 0x03
 1f0:	81 ff       	sbrs	r24, 1
 1f2:	bd c1       	rjmp	.+890    	; 0x56e <__stack+0x10f>
 1f4:	ce 01       	movw	r24, r28
 1f6:	01 96       	adiw	r24, 0x01	; 1
 1f8:	4c 01       	movw	r8, r24
 1fa:	f7 01       	movw	r30, r14
 1fc:	93 81       	ldd	r25, Z+3	; 0x03
 1fe:	f6 01       	movw	r30, r12
 200:	93 fd       	sbrc	r25, 3
 202:	85 91       	lpm	r24, Z+
 204:	93 ff       	sbrs	r25, 3
 206:	81 91       	ld	r24, Z+
 208:	6f 01       	movw	r12, r30
 20a:	88 23       	and	r24, r24
 20c:	09 f4       	brne	.+2      	; 0x210 <vfprintf+0x3a>
 20e:	ab c1       	rjmp	.+854    	; 0x566 <__stack+0x107>
 210:	85 32       	cpi	r24, 0x25	; 37
 212:	39 f4       	brne	.+14     	; 0x222 <vfprintf+0x4c>
 214:	93 fd       	sbrc	r25, 3
 216:	85 91       	lpm	r24, Z+
 218:	93 ff       	sbrs	r25, 3
 21a:	81 91       	ld	r24, Z+
 21c:	6f 01       	movw	r12, r30
 21e:	85 32       	cpi	r24, 0x25	; 37
 220:	29 f4       	brne	.+10     	; 0x22c <vfprintf+0x56>
 222:	b7 01       	movw	r22, r14
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <fputc>
 22a:	e7 cf       	rjmp	.-50     	; 0x1fa <vfprintf+0x24>
 22c:	51 2c       	mov	r5, r1
 22e:	31 2c       	mov	r3, r1
 230:	20 e0       	ldi	r18, 0x00	; 0
 232:	20 32       	cpi	r18, 0x20	; 32
 234:	a0 f4       	brcc	.+40     	; 0x25e <vfprintf+0x88>
 236:	8b 32       	cpi	r24, 0x2B	; 43
 238:	69 f0       	breq	.+26     	; 0x254 <vfprintf+0x7e>
 23a:	30 f4       	brcc	.+12     	; 0x248 <vfprintf+0x72>
 23c:	80 32       	cpi	r24, 0x20	; 32
 23e:	59 f0       	breq	.+22     	; 0x256 <vfprintf+0x80>
 240:	83 32       	cpi	r24, 0x23	; 35
 242:	69 f4       	brne	.+26     	; 0x25e <vfprintf+0x88>
 244:	20 61       	ori	r18, 0x10	; 16
 246:	2c c0       	rjmp	.+88     	; 0x2a0 <vfprintf+0xca>
 248:	8d 32       	cpi	r24, 0x2D	; 45
 24a:	39 f0       	breq	.+14     	; 0x25a <vfprintf+0x84>
 24c:	80 33       	cpi	r24, 0x30	; 48
 24e:	39 f4       	brne	.+14     	; 0x25e <vfprintf+0x88>
 250:	21 60       	ori	r18, 0x01	; 1
 252:	26 c0       	rjmp	.+76     	; 0x2a0 <vfprintf+0xca>
 254:	22 60       	ori	r18, 0x02	; 2
 256:	24 60       	ori	r18, 0x04	; 4
 258:	23 c0       	rjmp	.+70     	; 0x2a0 <vfprintf+0xca>
 25a:	28 60       	ori	r18, 0x08	; 8
 25c:	21 c0       	rjmp	.+66     	; 0x2a0 <vfprintf+0xca>
 25e:	27 fd       	sbrc	r18, 7
 260:	27 c0       	rjmp	.+78     	; 0x2b0 <vfprintf+0xda>
 262:	30 ed       	ldi	r19, 0xD0	; 208
 264:	38 0f       	add	r19, r24
 266:	3a 30       	cpi	r19, 0x0A	; 10
 268:	78 f4       	brcc	.+30     	; 0x288 <vfprintf+0xb2>
 26a:	26 ff       	sbrs	r18, 6
 26c:	06 c0       	rjmp	.+12     	; 0x27a <vfprintf+0xa4>
 26e:	fa e0       	ldi	r31, 0x0A	; 10
 270:	5f 9e       	mul	r5, r31
 272:	30 0d       	add	r19, r0
 274:	11 24       	eor	r1, r1
 276:	53 2e       	mov	r5, r19
 278:	13 c0       	rjmp	.+38     	; 0x2a0 <vfprintf+0xca>
 27a:	8a e0       	ldi	r24, 0x0A	; 10
 27c:	38 9e       	mul	r3, r24
 27e:	30 0d       	add	r19, r0
 280:	11 24       	eor	r1, r1
 282:	33 2e       	mov	r3, r19
 284:	20 62       	ori	r18, 0x20	; 32
 286:	0c c0       	rjmp	.+24     	; 0x2a0 <vfprintf+0xca>
 288:	8e 32       	cpi	r24, 0x2E	; 46
 28a:	21 f4       	brne	.+8      	; 0x294 <vfprintf+0xbe>
 28c:	26 fd       	sbrc	r18, 6
 28e:	6b c1       	rjmp	.+726    	; 0x566 <__stack+0x107>
 290:	20 64       	ori	r18, 0x40	; 64
 292:	06 c0       	rjmp	.+12     	; 0x2a0 <vfprintf+0xca>
 294:	8c 36       	cpi	r24, 0x6C	; 108
 296:	11 f4       	brne	.+4      	; 0x29c <vfprintf+0xc6>
 298:	20 68       	ori	r18, 0x80	; 128
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <vfprintf+0xca>
 29c:	88 36       	cpi	r24, 0x68	; 104
 29e:	41 f4       	brne	.+16     	; 0x2b0 <vfprintf+0xda>
 2a0:	f6 01       	movw	r30, r12
 2a2:	93 fd       	sbrc	r25, 3
 2a4:	85 91       	lpm	r24, Z+
 2a6:	93 ff       	sbrs	r25, 3
 2a8:	81 91       	ld	r24, Z+
 2aa:	6f 01       	movw	r12, r30
 2ac:	81 11       	cpse	r24, r1
 2ae:	c1 cf       	rjmp	.-126    	; 0x232 <vfprintf+0x5c>
 2b0:	98 2f       	mov	r25, r24
 2b2:	9f 7d       	andi	r25, 0xDF	; 223
 2b4:	95 54       	subi	r25, 0x45	; 69
 2b6:	93 30       	cpi	r25, 0x03	; 3
 2b8:	28 f4       	brcc	.+10     	; 0x2c4 <vfprintf+0xee>
 2ba:	0c 5f       	subi	r16, 0xFC	; 252
 2bc:	1f 4f       	sbci	r17, 0xFF	; 255
 2be:	ff e3       	ldi	r31, 0x3F	; 63
 2c0:	f9 83       	std	Y+1, r31	; 0x01
 2c2:	0d c0       	rjmp	.+26     	; 0x2de <vfprintf+0x108>
 2c4:	83 36       	cpi	r24, 0x63	; 99
 2c6:	31 f0       	breq	.+12     	; 0x2d4 <vfprintf+0xfe>
 2c8:	83 37       	cpi	r24, 0x73	; 115
 2ca:	71 f0       	breq	.+28     	; 0x2e8 <vfprintf+0x112>
 2cc:	83 35       	cpi	r24, 0x53	; 83
 2ce:	09 f0       	breq	.+2      	; 0x2d2 <vfprintf+0xfc>
 2d0:	5b c0       	rjmp	.+182    	; 0x388 <vfprintf+0x1b2>
 2d2:	22 c0       	rjmp	.+68     	; 0x318 <vfprintf+0x142>
 2d4:	f8 01       	movw	r30, r16
 2d6:	80 81       	ld	r24, Z
 2d8:	89 83       	std	Y+1, r24	; 0x01
 2da:	0e 5f       	subi	r16, 0xFE	; 254
 2dc:	1f 4f       	sbci	r17, 0xFF	; 255
 2de:	44 24       	eor	r4, r4
 2e0:	43 94       	inc	r4
 2e2:	51 2c       	mov	r5, r1
 2e4:	54 01       	movw	r10, r8
 2e6:	15 c0       	rjmp	.+42     	; 0x312 <vfprintf+0x13c>
 2e8:	38 01       	movw	r6, r16
 2ea:	f2 e0       	ldi	r31, 0x02	; 2
 2ec:	6f 0e       	add	r6, r31
 2ee:	71 1c       	adc	r7, r1
 2f0:	f8 01       	movw	r30, r16
 2f2:	a0 80       	ld	r10, Z
 2f4:	b1 80       	ldd	r11, Z+1	; 0x01
 2f6:	26 ff       	sbrs	r18, 6
 2f8:	03 c0       	rjmp	.+6      	; 0x300 <vfprintf+0x12a>
 2fa:	65 2d       	mov	r22, r5
 2fc:	70 e0       	ldi	r23, 0x00	; 0
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <vfprintf+0x12e>
 300:	6f ef       	ldi	r22, 0xFF	; 255
 302:	7f ef       	ldi	r23, 0xFF	; 255
 304:	c5 01       	movw	r24, r10
 306:	2c 87       	std	Y+12, r18	; 0x0c
 308:	0e 94 c8 02 	call	0x590	; 0x590 <strnlen>
 30c:	2c 01       	movw	r4, r24
 30e:	83 01       	movw	r16, r6
 310:	2c 85       	ldd	r18, Y+12	; 0x0c
 312:	2f 77       	andi	r18, 0x7F	; 127
 314:	22 2e       	mov	r2, r18
 316:	17 c0       	rjmp	.+46     	; 0x346 <vfprintf+0x170>
 318:	38 01       	movw	r6, r16
 31a:	f2 e0       	ldi	r31, 0x02	; 2
 31c:	6f 0e       	add	r6, r31
 31e:	71 1c       	adc	r7, r1
 320:	f8 01       	movw	r30, r16
 322:	a0 80       	ld	r10, Z
 324:	b1 80       	ldd	r11, Z+1	; 0x01
 326:	26 ff       	sbrs	r18, 6
 328:	03 c0       	rjmp	.+6      	; 0x330 <vfprintf+0x15a>
 32a:	65 2d       	mov	r22, r5
 32c:	70 e0       	ldi	r23, 0x00	; 0
 32e:	02 c0       	rjmp	.+4      	; 0x334 <vfprintf+0x15e>
 330:	6f ef       	ldi	r22, 0xFF	; 255
 332:	7f ef       	ldi	r23, 0xFF	; 255
 334:	c5 01       	movw	r24, r10
 336:	2c 87       	std	Y+12, r18	; 0x0c
 338:	0e 94 bd 02 	call	0x57a	; 0x57a <strnlen_P>
 33c:	2c 01       	movw	r4, r24
 33e:	2c 85       	ldd	r18, Y+12	; 0x0c
 340:	20 68       	ori	r18, 0x80	; 128
 342:	22 2e       	mov	r2, r18
 344:	83 01       	movw	r16, r6
 346:	23 fc       	sbrc	r2, 3
 348:	1b c0       	rjmp	.+54     	; 0x380 <vfprintf+0x1aa>
 34a:	83 2d       	mov	r24, r3
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	48 16       	cp	r4, r24
 350:	59 06       	cpc	r5, r25
 352:	b0 f4       	brcc	.+44     	; 0x380 <vfprintf+0x1aa>
 354:	b7 01       	movw	r22, r14
 356:	80 e2       	ldi	r24, 0x20	; 32
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <fputc>
 35e:	3a 94       	dec	r3
 360:	f4 cf       	rjmp	.-24     	; 0x34a <vfprintf+0x174>
 362:	f5 01       	movw	r30, r10
 364:	27 fc       	sbrc	r2, 7
 366:	85 91       	lpm	r24, Z+
 368:	27 fe       	sbrs	r2, 7
 36a:	81 91       	ld	r24, Z+
 36c:	5f 01       	movw	r10, r30
 36e:	b7 01       	movw	r22, r14
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <fputc>
 376:	31 10       	cpse	r3, r1
 378:	3a 94       	dec	r3
 37a:	f1 e0       	ldi	r31, 0x01	; 1
 37c:	4f 1a       	sub	r4, r31
 37e:	51 08       	sbc	r5, r1
 380:	41 14       	cp	r4, r1
 382:	51 04       	cpc	r5, r1
 384:	71 f7       	brne	.-36     	; 0x362 <vfprintf+0x18c>
 386:	e5 c0       	rjmp	.+458    	; 0x552 <__stack+0xf3>
 388:	84 36       	cpi	r24, 0x64	; 100
 38a:	11 f0       	breq	.+4      	; 0x390 <vfprintf+0x1ba>
 38c:	89 36       	cpi	r24, 0x69	; 105
 38e:	39 f5       	brne	.+78     	; 0x3de <vfprintf+0x208>
 390:	f8 01       	movw	r30, r16
 392:	27 ff       	sbrs	r18, 7
 394:	07 c0       	rjmp	.+14     	; 0x3a4 <vfprintf+0x1ce>
 396:	60 81       	ld	r22, Z
 398:	71 81       	ldd	r23, Z+1	; 0x01
 39a:	82 81       	ldd	r24, Z+2	; 0x02
 39c:	93 81       	ldd	r25, Z+3	; 0x03
 39e:	0c 5f       	subi	r16, 0xFC	; 252
 3a0:	1f 4f       	sbci	r17, 0xFF	; 255
 3a2:	08 c0       	rjmp	.+16     	; 0x3b4 <vfprintf+0x1de>
 3a4:	60 81       	ld	r22, Z
 3a6:	71 81       	ldd	r23, Z+1	; 0x01
 3a8:	07 2e       	mov	r0, r23
 3aa:	00 0c       	add	r0, r0
 3ac:	88 0b       	sbc	r24, r24
 3ae:	99 0b       	sbc	r25, r25
 3b0:	0e 5f       	subi	r16, 0xFE	; 254
 3b2:	1f 4f       	sbci	r17, 0xFF	; 255
 3b4:	2f 76       	andi	r18, 0x6F	; 111
 3b6:	72 2e       	mov	r7, r18
 3b8:	97 ff       	sbrs	r25, 7
 3ba:	09 c0       	rjmp	.+18     	; 0x3ce <vfprintf+0x1f8>
 3bc:	90 95       	com	r25
 3be:	80 95       	com	r24
 3c0:	70 95       	com	r23
 3c2:	61 95       	neg	r22
 3c4:	7f 4f       	sbci	r23, 0xFF	; 255
 3c6:	8f 4f       	sbci	r24, 0xFF	; 255
 3c8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ca:	20 68       	ori	r18, 0x80	; 128
 3cc:	72 2e       	mov	r7, r18
 3ce:	2a e0       	ldi	r18, 0x0A	; 10
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	a4 01       	movw	r20, r8
 3d4:	0e 94 0b 03 	call	0x616	; 0x616 <__ultoa_invert>
 3d8:	a8 2e       	mov	r10, r24
 3da:	a8 18       	sub	r10, r8
 3dc:	44 c0       	rjmp	.+136    	; 0x466 <__stack+0x7>
 3de:	85 37       	cpi	r24, 0x75	; 117
 3e0:	29 f4       	brne	.+10     	; 0x3ec <vfprintf+0x216>
 3e2:	2f 7e       	andi	r18, 0xEF	; 239
 3e4:	b2 2e       	mov	r11, r18
 3e6:	2a e0       	ldi	r18, 0x0A	; 10
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	25 c0       	rjmp	.+74     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3ec:	f2 2f       	mov	r31, r18
 3ee:	f9 7f       	andi	r31, 0xF9	; 249
 3f0:	bf 2e       	mov	r11, r31
 3f2:	8f 36       	cpi	r24, 0x6F	; 111
 3f4:	c1 f0       	breq	.+48     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3f6:	18 f4       	brcc	.+6      	; 0x3fe <vfprintf+0x228>
 3f8:	88 35       	cpi	r24, 0x58	; 88
 3fa:	79 f0       	breq	.+30     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3fc:	b4 c0       	rjmp	.+360    	; 0x566 <__stack+0x107>
 3fe:	80 37       	cpi	r24, 0x70	; 112
 400:	19 f0       	breq	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 402:	88 37       	cpi	r24, 0x78	; 120
 404:	21 f0       	breq	.+8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 406:	af c0       	rjmp	.+350    	; 0x566 <__stack+0x107>
 408:	2f 2f       	mov	r18, r31
 40a:	20 61       	ori	r18, 0x10	; 16
 40c:	b2 2e       	mov	r11, r18
 40e:	b4 fe       	sbrs	r11, 4
 410:	0d c0       	rjmp	.+26     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 412:	8b 2d       	mov	r24, r11
 414:	84 60       	ori	r24, 0x04	; 4
 416:	b8 2e       	mov	r11, r24
 418:	09 c0       	rjmp	.+18     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 41a:	24 ff       	sbrs	r18, 4
 41c:	0a c0       	rjmp	.+20     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 41e:	9f 2f       	mov	r25, r31
 420:	96 60       	ori	r25, 0x06	; 6
 422:	b9 2e       	mov	r11, r25
 424:	06 c0       	rjmp	.+12     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 426:	28 e0       	ldi	r18, 0x08	; 8
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	05 c0       	rjmp	.+10     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42c:	20 e1       	ldi	r18, 0x10	; 16
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	02 c0       	rjmp	.+4      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 432:	20 e1       	ldi	r18, 0x10	; 16
 434:	32 e0       	ldi	r19, 0x02	; 2
 436:	f8 01       	movw	r30, r16
 438:	b7 fe       	sbrs	r11, 7
 43a:	07 c0       	rjmp	.+14     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43c:	60 81       	ld	r22, Z
 43e:	71 81       	ldd	r23, Z+1	; 0x01
 440:	82 81       	ldd	r24, Z+2	; 0x02
 442:	93 81       	ldd	r25, Z+3	; 0x03
 444:	0c 5f       	subi	r16, 0xFC	; 252
 446:	1f 4f       	sbci	r17, 0xFF	; 255
 448:	06 c0       	rjmp	.+12     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 44a:	60 81       	ld	r22, Z
 44c:	71 81       	ldd	r23, Z+1	; 0x01
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 5f       	subi	r16, 0xFE	; 254
 454:	1f 4f       	sbci	r17, 0xFF	; 255
 456:	a4 01       	movw	r20, r8
 458:	0e 94 0b 03 	call	0x616	; 0x616 <__ultoa_invert>
 45c:	a8 2e       	mov	r10, r24
 45e:	a8 18       	sub	r10, r8
 460:	fb 2d       	mov	r31, r11
 462:	ff 77       	andi	r31, 0x7F	; 127
 464:	7f 2e       	mov	r7, r31
 466:	76 fe       	sbrs	r7, 6
 468:	0b c0       	rjmp	.+22     	; 0x480 <__stack+0x21>
 46a:	37 2d       	mov	r19, r7
 46c:	3e 7f       	andi	r19, 0xFE	; 254
 46e:	a5 14       	cp	r10, r5
 470:	50 f4       	brcc	.+20     	; 0x486 <__stack+0x27>
 472:	74 fe       	sbrs	r7, 4
 474:	0a c0       	rjmp	.+20     	; 0x48a <__stack+0x2b>
 476:	72 fc       	sbrc	r7, 2
 478:	08 c0       	rjmp	.+16     	; 0x48a <__stack+0x2b>
 47a:	37 2d       	mov	r19, r7
 47c:	3e 7e       	andi	r19, 0xEE	; 238
 47e:	05 c0       	rjmp	.+10     	; 0x48a <__stack+0x2b>
 480:	ba 2c       	mov	r11, r10
 482:	37 2d       	mov	r19, r7
 484:	03 c0       	rjmp	.+6      	; 0x48c <__stack+0x2d>
 486:	ba 2c       	mov	r11, r10
 488:	01 c0       	rjmp	.+2      	; 0x48c <__stack+0x2d>
 48a:	b5 2c       	mov	r11, r5
 48c:	34 ff       	sbrs	r19, 4
 48e:	0d c0       	rjmp	.+26     	; 0x4aa <__stack+0x4b>
 490:	fe 01       	movw	r30, r28
 492:	ea 0d       	add	r30, r10
 494:	f1 1d       	adc	r31, r1
 496:	80 81       	ld	r24, Z
 498:	80 33       	cpi	r24, 0x30	; 48
 49a:	11 f4       	brne	.+4      	; 0x4a0 <__stack+0x41>
 49c:	39 7e       	andi	r19, 0xE9	; 233
 49e:	09 c0       	rjmp	.+18     	; 0x4b2 <__stack+0x53>
 4a0:	32 ff       	sbrs	r19, 2
 4a2:	06 c0       	rjmp	.+12     	; 0x4b0 <__stack+0x51>
 4a4:	b3 94       	inc	r11
 4a6:	b3 94       	inc	r11
 4a8:	04 c0       	rjmp	.+8      	; 0x4b2 <__stack+0x53>
 4aa:	83 2f       	mov	r24, r19
 4ac:	86 78       	andi	r24, 0x86	; 134
 4ae:	09 f0       	breq	.+2      	; 0x4b2 <__stack+0x53>
 4b0:	b3 94       	inc	r11
 4b2:	33 fd       	sbrc	r19, 3
 4b4:	13 c0       	rjmp	.+38     	; 0x4dc <__stack+0x7d>
 4b6:	30 ff       	sbrs	r19, 0
 4b8:	06 c0       	rjmp	.+12     	; 0x4c6 <__stack+0x67>
 4ba:	5a 2c       	mov	r5, r10
 4bc:	b3 14       	cp	r11, r3
 4be:	18 f4       	brcc	.+6      	; 0x4c6 <__stack+0x67>
 4c0:	53 0c       	add	r5, r3
 4c2:	5b 18       	sub	r5, r11
 4c4:	b3 2c       	mov	r11, r3
 4c6:	b3 14       	cp	r11, r3
 4c8:	68 f4       	brcc	.+26     	; 0x4e4 <__stack+0x85>
 4ca:	b7 01       	movw	r22, r14
 4cc:	80 e2       	ldi	r24, 0x20	; 32
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	3c 87       	std	Y+12, r19	; 0x0c
 4d2:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <fputc>
 4d6:	b3 94       	inc	r11
 4d8:	3c 85       	ldd	r19, Y+12	; 0x0c
 4da:	f5 cf       	rjmp	.-22     	; 0x4c6 <__stack+0x67>
 4dc:	b3 14       	cp	r11, r3
 4de:	10 f4       	brcc	.+4      	; 0x4e4 <__stack+0x85>
 4e0:	3b 18       	sub	r3, r11
 4e2:	01 c0       	rjmp	.+2      	; 0x4e6 <__stack+0x87>
 4e4:	31 2c       	mov	r3, r1
 4e6:	34 ff       	sbrs	r19, 4
 4e8:	12 c0       	rjmp	.+36     	; 0x50e <__stack+0xaf>
 4ea:	b7 01       	movw	r22, r14
 4ec:	80 e3       	ldi	r24, 0x30	; 48
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	3c 87       	std	Y+12, r19	; 0x0c
 4f2:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <fputc>
 4f6:	3c 85       	ldd	r19, Y+12	; 0x0c
 4f8:	32 ff       	sbrs	r19, 2
 4fa:	17 c0       	rjmp	.+46     	; 0x52a <__stack+0xcb>
 4fc:	31 fd       	sbrc	r19, 1
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <__stack+0xa7>
 500:	88 e7       	ldi	r24, 0x78	; 120
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	02 c0       	rjmp	.+4      	; 0x50a <__stack+0xab>
 506:	88 e5       	ldi	r24, 0x58	; 88
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	b7 01       	movw	r22, r14
 50c:	0c c0       	rjmp	.+24     	; 0x526 <__stack+0xc7>
 50e:	83 2f       	mov	r24, r19
 510:	86 78       	andi	r24, 0x86	; 134
 512:	59 f0       	breq	.+22     	; 0x52a <__stack+0xcb>
 514:	31 ff       	sbrs	r19, 1
 516:	02 c0       	rjmp	.+4      	; 0x51c <__stack+0xbd>
 518:	8b e2       	ldi	r24, 0x2B	; 43
 51a:	01 c0       	rjmp	.+2      	; 0x51e <__stack+0xbf>
 51c:	80 e2       	ldi	r24, 0x20	; 32
 51e:	37 fd       	sbrc	r19, 7
 520:	8d e2       	ldi	r24, 0x2D	; 45
 522:	b7 01       	movw	r22, r14
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <fputc>
 52a:	a5 14       	cp	r10, r5
 52c:	38 f4       	brcc	.+14     	; 0x53c <__stack+0xdd>
 52e:	b7 01       	movw	r22, r14
 530:	80 e3       	ldi	r24, 0x30	; 48
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <fputc>
 538:	5a 94       	dec	r5
 53a:	f7 cf       	rjmp	.-18     	; 0x52a <__stack+0xcb>
 53c:	aa 94       	dec	r10
 53e:	f4 01       	movw	r30, r8
 540:	ea 0d       	add	r30, r10
 542:	f1 1d       	adc	r31, r1
 544:	80 81       	ld	r24, Z
 546:	b7 01       	movw	r22, r14
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <fputc>
 54e:	a1 10       	cpse	r10, r1
 550:	f5 cf       	rjmp	.-22     	; 0x53c <__stack+0xdd>
 552:	33 20       	and	r3, r3
 554:	09 f4       	brne	.+2      	; 0x558 <__stack+0xf9>
 556:	51 ce       	rjmp	.-862    	; 0x1fa <vfprintf+0x24>
 558:	b7 01       	movw	r22, r14
 55a:	80 e2       	ldi	r24, 0x20	; 32
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <fputc>
 562:	3a 94       	dec	r3
 564:	f6 cf       	rjmp	.-20     	; 0x552 <__stack+0xf3>
 566:	f7 01       	movw	r30, r14
 568:	86 81       	ldd	r24, Z+6	; 0x06
 56a:	97 81       	ldd	r25, Z+7	; 0x07
 56c:	02 c0       	rjmp	.+4      	; 0x572 <__stack+0x113>
 56e:	8f ef       	ldi	r24, 0xFF	; 255
 570:	9f ef       	ldi	r25, 0xFF	; 255
 572:	2c 96       	adiw	r28, 0x0c	; 12
 574:	e2 e1       	ldi	r30, 0x12	; 18
 576:	0c 94 85 03 	jmp	0x70a	; 0x70a <__epilogue_restores__>

0000057a <strnlen_P>:
 57a:	fc 01       	movw	r30, r24
 57c:	05 90       	lpm	r0, Z+
 57e:	61 50       	subi	r22, 0x01	; 1
 580:	70 40       	sbci	r23, 0x00	; 0
 582:	01 10       	cpse	r0, r1
 584:	d8 f7       	brcc	.-10     	; 0x57c <strnlen_P+0x2>
 586:	80 95       	com	r24
 588:	90 95       	com	r25
 58a:	8e 0f       	add	r24, r30
 58c:	9f 1f       	adc	r25, r31
 58e:	08 95       	ret

00000590 <strnlen>:
 590:	fc 01       	movw	r30, r24
 592:	61 50       	subi	r22, 0x01	; 1
 594:	70 40       	sbci	r23, 0x00	; 0
 596:	01 90       	ld	r0, Z+
 598:	01 10       	cpse	r0, r1
 59a:	d8 f7       	brcc	.-10     	; 0x592 <strnlen+0x2>
 59c:	80 95       	com	r24
 59e:	90 95       	com	r25
 5a0:	8e 0f       	add	r24, r30
 5a2:	9f 1f       	adc	r25, r31
 5a4:	08 95       	ret

000005a6 <fputc>:
 5a6:	0f 93       	push	r16
 5a8:	1f 93       	push	r17
 5aa:	cf 93       	push	r28
 5ac:	df 93       	push	r29
 5ae:	fb 01       	movw	r30, r22
 5b0:	23 81       	ldd	r18, Z+3	; 0x03
 5b2:	21 fd       	sbrc	r18, 1
 5b4:	03 c0       	rjmp	.+6      	; 0x5bc <fputc+0x16>
 5b6:	8f ef       	ldi	r24, 0xFF	; 255
 5b8:	9f ef       	ldi	r25, 0xFF	; 255
 5ba:	28 c0       	rjmp	.+80     	; 0x60c <fputc+0x66>
 5bc:	22 ff       	sbrs	r18, 2
 5be:	16 c0       	rjmp	.+44     	; 0x5ec <fputc+0x46>
 5c0:	46 81       	ldd	r20, Z+6	; 0x06
 5c2:	57 81       	ldd	r21, Z+7	; 0x07
 5c4:	24 81       	ldd	r18, Z+4	; 0x04
 5c6:	35 81       	ldd	r19, Z+5	; 0x05
 5c8:	42 17       	cp	r20, r18
 5ca:	53 07       	cpc	r21, r19
 5cc:	44 f4       	brge	.+16     	; 0x5de <fputc+0x38>
 5ce:	a0 81       	ld	r26, Z
 5d0:	b1 81       	ldd	r27, Z+1	; 0x01
 5d2:	9d 01       	movw	r18, r26
 5d4:	2f 5f       	subi	r18, 0xFF	; 255
 5d6:	3f 4f       	sbci	r19, 0xFF	; 255
 5d8:	31 83       	std	Z+1, r19	; 0x01
 5da:	20 83       	st	Z, r18
 5dc:	8c 93       	st	X, r24
 5de:	26 81       	ldd	r18, Z+6	; 0x06
 5e0:	37 81       	ldd	r19, Z+7	; 0x07
 5e2:	2f 5f       	subi	r18, 0xFF	; 255
 5e4:	3f 4f       	sbci	r19, 0xFF	; 255
 5e6:	37 83       	std	Z+7, r19	; 0x07
 5e8:	26 83       	std	Z+6, r18	; 0x06
 5ea:	10 c0       	rjmp	.+32     	; 0x60c <fputc+0x66>
 5ec:	eb 01       	movw	r28, r22
 5ee:	09 2f       	mov	r16, r25
 5f0:	18 2f       	mov	r17, r24
 5f2:	00 84       	ldd	r0, Z+8	; 0x08
 5f4:	f1 85       	ldd	r31, Z+9	; 0x09
 5f6:	e0 2d       	mov	r30, r0
 5f8:	09 95       	icall
 5fa:	89 2b       	or	r24, r25
 5fc:	e1 f6       	brne	.-72     	; 0x5b6 <fputc+0x10>
 5fe:	8e 81       	ldd	r24, Y+6	; 0x06
 600:	9f 81       	ldd	r25, Y+7	; 0x07
 602:	01 96       	adiw	r24, 0x01	; 1
 604:	9f 83       	std	Y+7, r25	; 0x07
 606:	8e 83       	std	Y+6, r24	; 0x06
 608:	81 2f       	mov	r24, r17
 60a:	90 2f       	mov	r25, r16
 60c:	df 91       	pop	r29
 60e:	cf 91       	pop	r28
 610:	1f 91       	pop	r17
 612:	0f 91       	pop	r16
 614:	08 95       	ret

00000616 <__ultoa_invert>:
 616:	fa 01       	movw	r30, r20
 618:	aa 27       	eor	r26, r26
 61a:	28 30       	cpi	r18, 0x08	; 8
 61c:	51 f1       	breq	.+84     	; 0x672 <__ultoa_invert+0x5c>
 61e:	20 31       	cpi	r18, 0x10	; 16
 620:	81 f1       	breq	.+96     	; 0x682 <__ultoa_invert+0x6c>
 622:	e8 94       	clt
 624:	6f 93       	push	r22
 626:	6e 7f       	andi	r22, 0xFE	; 254
 628:	6e 5f       	subi	r22, 0xFE	; 254
 62a:	7f 4f       	sbci	r23, 0xFF	; 255
 62c:	8f 4f       	sbci	r24, 0xFF	; 255
 62e:	9f 4f       	sbci	r25, 0xFF	; 255
 630:	af 4f       	sbci	r26, 0xFF	; 255
 632:	b1 e0       	ldi	r27, 0x01	; 1
 634:	3e d0       	rcall	.+124    	; 0x6b2 <__ultoa_invert+0x9c>
 636:	b4 e0       	ldi	r27, 0x04	; 4
 638:	3c d0       	rcall	.+120    	; 0x6b2 <__ultoa_invert+0x9c>
 63a:	67 0f       	add	r22, r23
 63c:	78 1f       	adc	r23, r24
 63e:	89 1f       	adc	r24, r25
 640:	9a 1f       	adc	r25, r26
 642:	a1 1d       	adc	r26, r1
 644:	68 0f       	add	r22, r24
 646:	79 1f       	adc	r23, r25
 648:	8a 1f       	adc	r24, r26
 64a:	91 1d       	adc	r25, r1
 64c:	a1 1d       	adc	r26, r1
 64e:	6a 0f       	add	r22, r26
 650:	71 1d       	adc	r23, r1
 652:	81 1d       	adc	r24, r1
 654:	91 1d       	adc	r25, r1
 656:	a1 1d       	adc	r26, r1
 658:	20 d0       	rcall	.+64     	; 0x69a <__ultoa_invert+0x84>
 65a:	09 f4       	brne	.+2      	; 0x65e <__ultoa_invert+0x48>
 65c:	68 94       	set
 65e:	3f 91       	pop	r19
 660:	2a e0       	ldi	r18, 0x0A	; 10
 662:	26 9f       	mul	r18, r22
 664:	11 24       	eor	r1, r1
 666:	30 19       	sub	r19, r0
 668:	30 5d       	subi	r19, 0xD0	; 208
 66a:	31 93       	st	Z+, r19
 66c:	de f6       	brtc	.-74     	; 0x624 <__ultoa_invert+0xe>
 66e:	cf 01       	movw	r24, r30
 670:	08 95       	ret
 672:	46 2f       	mov	r20, r22
 674:	47 70       	andi	r20, 0x07	; 7
 676:	40 5d       	subi	r20, 0xD0	; 208
 678:	41 93       	st	Z+, r20
 67a:	b3 e0       	ldi	r27, 0x03	; 3
 67c:	0f d0       	rcall	.+30     	; 0x69c <__ultoa_invert+0x86>
 67e:	c9 f7       	brne	.-14     	; 0x672 <__ultoa_invert+0x5c>
 680:	f6 cf       	rjmp	.-20     	; 0x66e <__ultoa_invert+0x58>
 682:	46 2f       	mov	r20, r22
 684:	4f 70       	andi	r20, 0x0F	; 15
 686:	40 5d       	subi	r20, 0xD0	; 208
 688:	4a 33       	cpi	r20, 0x3A	; 58
 68a:	18 f0       	brcs	.+6      	; 0x692 <__ultoa_invert+0x7c>
 68c:	49 5d       	subi	r20, 0xD9	; 217
 68e:	31 fd       	sbrc	r19, 1
 690:	40 52       	subi	r20, 0x20	; 32
 692:	41 93       	st	Z+, r20
 694:	02 d0       	rcall	.+4      	; 0x69a <__ultoa_invert+0x84>
 696:	a9 f7       	brne	.-22     	; 0x682 <__ultoa_invert+0x6c>
 698:	ea cf       	rjmp	.-44     	; 0x66e <__ultoa_invert+0x58>
 69a:	b4 e0       	ldi	r27, 0x04	; 4
 69c:	a6 95       	lsr	r26
 69e:	97 95       	ror	r25
 6a0:	87 95       	ror	r24
 6a2:	77 95       	ror	r23
 6a4:	67 95       	ror	r22
 6a6:	ba 95       	dec	r27
 6a8:	c9 f7       	brne	.-14     	; 0x69c <__ultoa_invert+0x86>
 6aa:	00 97       	sbiw	r24, 0x00	; 0
 6ac:	61 05       	cpc	r22, r1
 6ae:	71 05       	cpc	r23, r1
 6b0:	08 95       	ret
 6b2:	9b 01       	movw	r18, r22
 6b4:	ac 01       	movw	r20, r24
 6b6:	0a 2e       	mov	r0, r26
 6b8:	06 94       	lsr	r0
 6ba:	57 95       	ror	r21
 6bc:	47 95       	ror	r20
 6be:	37 95       	ror	r19
 6c0:	27 95       	ror	r18
 6c2:	ba 95       	dec	r27
 6c4:	c9 f7       	brne	.-14     	; 0x6b8 <__ultoa_invert+0xa2>
 6c6:	62 0f       	add	r22, r18
 6c8:	73 1f       	adc	r23, r19
 6ca:	84 1f       	adc	r24, r20
 6cc:	95 1f       	adc	r25, r21
 6ce:	a0 1d       	adc	r26, r0
 6d0:	08 95       	ret

000006d2 <__prologue_saves__>:
 6d2:	2f 92       	push	r2
 6d4:	3f 92       	push	r3
 6d6:	4f 92       	push	r4
 6d8:	5f 92       	push	r5
 6da:	6f 92       	push	r6
 6dc:	7f 92       	push	r7
 6de:	8f 92       	push	r8
 6e0:	9f 92       	push	r9
 6e2:	af 92       	push	r10
 6e4:	bf 92       	push	r11
 6e6:	cf 92       	push	r12
 6e8:	df 92       	push	r13
 6ea:	ef 92       	push	r14
 6ec:	ff 92       	push	r15
 6ee:	0f 93       	push	r16
 6f0:	1f 93       	push	r17
 6f2:	cf 93       	push	r28
 6f4:	df 93       	push	r29
 6f6:	cd b7       	in	r28, 0x3d	; 61
 6f8:	de b7       	in	r29, 0x3e	; 62
 6fa:	ca 1b       	sub	r28, r26
 6fc:	db 0b       	sbc	r29, r27
 6fe:	0f b6       	in	r0, 0x3f	; 63
 700:	f8 94       	cli
 702:	de bf       	out	0x3e, r29	; 62
 704:	0f be       	out	0x3f, r0	; 63
 706:	cd bf       	out	0x3d, r28	; 61
 708:	09 94       	ijmp

0000070a <__epilogue_restores__>:
 70a:	2a 88       	ldd	r2, Y+18	; 0x12
 70c:	39 88       	ldd	r3, Y+17	; 0x11
 70e:	48 88       	ldd	r4, Y+16	; 0x10
 710:	5f 84       	ldd	r5, Y+15	; 0x0f
 712:	6e 84       	ldd	r6, Y+14	; 0x0e
 714:	7d 84       	ldd	r7, Y+13	; 0x0d
 716:	8c 84       	ldd	r8, Y+12	; 0x0c
 718:	9b 84       	ldd	r9, Y+11	; 0x0b
 71a:	aa 84       	ldd	r10, Y+10	; 0x0a
 71c:	b9 84       	ldd	r11, Y+9	; 0x09
 71e:	c8 84       	ldd	r12, Y+8	; 0x08
 720:	df 80       	ldd	r13, Y+7	; 0x07
 722:	ee 80       	ldd	r14, Y+6	; 0x06
 724:	fd 80       	ldd	r15, Y+5	; 0x05
 726:	0c 81       	ldd	r16, Y+4	; 0x04
 728:	1b 81       	ldd	r17, Y+3	; 0x03
 72a:	aa 81       	ldd	r26, Y+2	; 0x02
 72c:	b9 81       	ldd	r27, Y+1	; 0x01
 72e:	ce 0f       	add	r28, r30
 730:	d1 1d       	adc	r29, r1
 732:	0f b6       	in	r0, 0x3f	; 63
 734:	f8 94       	cli
 736:	de bf       	out	0x3e, r29	; 62
 738:	0f be       	out	0x3f, r0	; 63
 73a:	cd bf       	out	0x3d, r28	; 61
 73c:	ed 01       	movw	r28, r26
 73e:	08 95       	ret

00000740 <_exit>:
 740:	f8 94       	cli

00000742 <__stop_program>:
 742:	ff cf       	rjmp	.-2      	; 0x742 <__stop_program>
